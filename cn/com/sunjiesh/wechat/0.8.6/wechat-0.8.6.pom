<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>wechat</artifactId>
	<version>0.8.6</version>
	<name>微信SDK集成</name>
	
	<parent>
		<groupId>cn.com.sunjiesh</groupId>
		<artifactId>project-parent</artifactId>
		<version>0.2.9</version>
	</parent>

	<properties>
		<endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring-version>4.1.7.RELEASE</spring-version>
		<testng.version>6.9.6</testng.version>
	</properties>

	<repositories>
		<repository>
			<id>my.mvn.repo</id>
			<url>https://github.com/sunjiesh/mvn-repo/raw/master</url>
			<!-- use snapshot version -->
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		
	
		<dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			</dependency>
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>
		

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>

		<!-- ================================================= -->
		<!-- 日志及相关依赖（用slf4j+logback代替jcl+log4j） -->
		<!-- ================================================= -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- 将现有的jakarta commons logging的调用转换成lsf4j的调用。 -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<!-- Hack：确保commons-logging的jar包不被引入，否则将和jcl-over-slf4j冲突 -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- slf4j的实现：logback，用来取代log4j。更快、更强！ -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
		</dependency>
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
		</dependency>
		
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		
		<dependency>
			<groupId>cn.com.sunjiesh</groupId>
			<artifactId>utils-thirdparty</artifactId>
		</dependency>
		<dependency>
			<groupId>cn.com.sunjiesh</groupId>
			<artifactId>utils-web</artifactId>
		</dependency>


	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>wechat.properties</exclude>
                                        <exclude>config.properties</exclude>
                                        <exclude>tuling123.properties</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>2.4</version>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile><!-- sonar profile -->
			<id>sonar</id>
			<properties>
				<sonar.jdbc.url><![CDATA[jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8]]></sonar.jdbc.url>
				<sonar.jdbc.driver>com.mysql.jdbc.Driver</sonar.jdbc.driver>
				<sonar.jdbc.username>root</sonar.jdbc.username>
				<sonar.jdbc.password>password</sonar.jdbc.password>
				<sonar.host.url>http://localhost:9000</sonar.host.url>
			</properties>
		</profile>
	</profiles>
	
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Internal Repository</name>
			<url>file:///mvn-repo</url>
		</repository>
	</distributionManagement>
	<scm>
		<url>https://github.com/sunjiesh/wechat</url>
		<connection>scm:git:git@github.com:sunjiesh/wechat.git</connection>
		<developerConnection>scm:git:git@github.com:sunjiesh/wechat.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<url>https://github.com/sunjiesh/wechat</url>
	<description>Wechat Server Sdk</description>
</project>
